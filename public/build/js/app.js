!function(){"use strict";angular.module("contactsApp",["ui.bootstrap"])}(),function(){"use strict";angular.module("contactsApp").controller("ContactsController",["$http","ContactsService",function(t,n){var a=this;a.contacts=[],a.firstName="",a.lastName="",a.email="",a.phone="",a.contactForm={},a.displayContacts=function(){t.get("get-contacts").then(function(t){a.contacts=t.data,_.each(a.contacts,function(t){t.intrash=!!+t.intrash,n.contacts.push(t)})},function(t){alert("There was an error retrieving contacts.")})},a.displayContacts(),a.addContact=function(){t.post("save-contact",{first_name:a.firstName,last_name:a.lastName,email:a.email,phone:a.phone}).then(function(t){a.displayContacts(),a.firstName="",a.lastName="",a.email="",a.phone=""},function(t){alert.log("There was an error saving the contact.",t)})},a.toggleContactInTrash=function(n){n.intrash=!n.intrash,t.post("soft-delete",{id:n.id}).then(function(t){},function(t){alert("There was an error storing the 'intrash' state of "+n.first_name),console.log(t)})}}])}(),function(){"use strict";angular.module("contactsApp").service("ContactsService",function(){var t=this;t.contacts=[]})}(),function(){"use strict";angular.module("contactsApp").controller("TrashModalController",["ContactsService","$http",function(t,n){var a=this;a.toggleSelectAll=function(){_.each(t.contacts,function(t){t.selected=!t.selected})}}])}(),function(){"use strict"}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRhY3RzYXBwLm1vZHVsZS5qcyIsImNvbnRhY3RzL2NvbnRhY3RzLmNvbnRyb2xsZXIuanMiLCJjb250YWN0cy9jb250YWN0cy5zZXJ2aWNlLmpzIiwiY29udGFjdHMvdHJhc2htb2RhbC5jb250cm9sbGVyLmpzIiwiY29udGFjdF9saXN0cy9jb250YWN0Lmxpc3RzLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsImNvbnRyb2xsZXIiLCIkaHR0cCIsIkNvbnRhY3RzU2VydmljZSIsInZtIiwidGhpcyIsImNvbnRhY3RzIiwiZmlyc3ROYW1lIiwibGFzdE5hbWUiLCJlbWFpbCIsInBob25lIiwiY29udGFjdEZvcm0iLCJkaXNwbGF5Q29udGFjdHMiLCJnZXQiLCJ0aGVuIiwicmVzIiwiZGF0YSIsIl8iLCJlYWNoIiwiY29udGFjdCIsImludHJhc2giLCJwdXNoIiwiYWxlcnQiLCJhZGRDb250YWN0IiwicG9zdCIsImZpcnN0X25hbWUiLCJsYXN0X25hbWUiLCJsb2ciLCJ0b2dnbGVDb250YWN0SW5UcmFzaCIsImlkIiwiY29uc29sZSIsInNlcnZpY2UiLCJ0b2dnbGVTZWxlY3RBbGwiLCJzZWxlY3RlZCJdLCJtYXBwaW5ncyI6IkNBSUEsV0FFQSxZQUVBQSxTQUFBQyxPQUFBLGVBQUEsb0JDSkEsV0FFQSxZQUVBRCxTQUFBQyxPQUFBLGVBQ0FDLFdBQUEsc0JBQUEsUUFBQSxrQkFBQSxTQUFBQyxFQUFBQyxHQUVBLEdBQUFDLEdBQUFDLElBR0FELEdBQUFFLFlBR0FGLEVBQUFHLFVBQUEsR0FDQUgsRUFBQUksU0FBQSxHQUNBSixFQUFBSyxNQUFBLEdBQ0FMLEVBQUFNLE1BQUEsR0FFQU4sRUFBQU8sZUFHQVAsRUFBQVEsZ0JBQUEsV0FFQVYsRUFBQVcsSUFBQSxnQkFDQUMsS0FBQSxTQUFBQyxHQUVBWCxFQUFBRSxTQUFBUyxFQUFBQyxLQUdBQyxFQUFBQyxLQUFBZCxFQUFBRSxTQUFBLFNBQUFhLEdBQ0FBLEVBQUFDLFdBQUFELEVBQUFDLFFBRUFqQixFQUFBRyxTQUFBZSxLQUFBRixNQUdBLFNBQUFKLEdBQ0FPLE1BQUEsOENBS0FsQixFQUFBUSxrQkFJQVIsRUFBQW1CLFdBQUEsV0FFQXJCLEVBQUFzQixLQUFBLGdCQUVBQyxXQUFBckIsRUFBQUcsVUFDQW1CLFVBQUF0QixFQUFBSSxTQUNBQyxNQUFBTCxFQUFBSyxNQUNBQyxNQUFBTixFQUFBTSxRQUdBSSxLQUFBLFNBQUFDLEdBQ0FYLEVBQUFRLGtCQUVBUixFQUFBRyxVQUFBLEdBQ0FILEVBQUFJLFNBQUEsR0FDQUosRUFBQUssTUFBQSxHQUNBTCxFQUFBTSxNQUFBLElBRUEsU0FBQUssR0FDQU8sTUFBQUssSUFBQSx5Q0FBQVosTUFNQVgsRUFBQXdCLHFCQUFBLFNBQUFULEdBRUFBLEVBQUFDLFNBQUFELEVBQUEsUUFFQWpCLEVBQUFzQixLQUFBLGVBQUFLLEdBQUFWLEVBQUFVLEtBRUFmLEtBQUEsU0FBQUMsS0FFQSxTQUFBQSxHQUNBTyxNQUFBLHFEQUFBSCxFQUFBTSxZQUNBSyxRQUFBSCxJQUFBWixZQ2hGQSxXQUVBLFlBR0FoQixTQUFBQyxPQUFBLGVBQ0ErQixRQUFBLGtCQUFBLFdBRUEsR0FBQTNCLEdBQUFDLElBRUFELEdBQUFFLGlCQ2JBLFdBRUEsWUFFQVAsU0FBQUMsT0FBQSxlQUNBQyxXQUFBLHdCQUFBLGtCQUFBLFFBQUEsU0FBQUUsRUFBQUQsR0FFQSxHQUFBRSxHQUFBQyxJQUVBRCxHQUFBNEIsZ0JBQUEsV0FDQWYsRUFBQUMsS0FBQWYsRUFBQUcsU0FBQSxTQUFBYSxHQUNBQSxFQUFBYyxVQUFBZCxFQUFBLGtCQ1JBLFdBRUEiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENyZWF0ZWQgYnkgTmVpbCBTdHJhaW4gb24gMy8xNC8yMDE2LlxyXG4gKi9cclxuXHJcbihmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICAgIGFuZ3VsYXIubW9kdWxlKCdjb250YWN0c0FwcCcsIFsndWkuYm9vdHN0cmFwJ10pO1xyXG5cclxuXHJcbn0oKSk7XHJcbiIsIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IEpvcmRhbiBNYXZyb2dlb3JnZSBvbiAzLzE0LzIwMTYuXHJcbiAqL1xyXG5cclxuKGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoJ2NvbnRhY3RzQXBwJylcclxuICAgICAgICAuY29udHJvbGxlcignQ29udGFjdHNDb250cm9sbGVyJywgZnVuY3Rpb24gKCRodHRwLCBDb250YWN0c1NlcnZpY2UpIHtcclxuXHJcbiAgICAgICAgICAgIHZhciB2bSA9IHRoaXM7XHJcblxyXG4gICAgICAgICAgICAvLyBFbXB0eSBsaXN0cyB0byBob2xkIGFsbCBjb250YWN0cy5cclxuICAgICAgICAgICAgdm0uY29udGFjdHMgPSBbXTtcclxuXHJcbiAgICAgICAgICAgIC8vIFByb3BlcnRpZXMgdG8gc3RvcmUgdmFsdWVzIGZyb20gbmV3IHVzZXIgZm9ybS5cclxuICAgICAgICAgICAgdm0uZmlyc3ROYW1lID0gJyc7XHJcbiAgICAgICAgICAgIHZtLmxhc3ROYW1lID0gJyc7XHJcbiAgICAgICAgICAgIHZtLmVtYWlsID0gJyc7XHJcbiAgICAgICAgICAgIHZtLnBob25lID0gJyc7XHJcblxyXG4gICAgICAgICAgICB2bS5jb250YWN0Rm9ybSA9IHt9O1xyXG5cclxuXHJcbiAgICAgICAgICAgIHZtLmRpc3BsYXlDb250YWN0cyA9IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgICAgICAgICAkaHR0cC5nZXQoJ2dldC1jb250YWN0cycpXHJcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gc3VjY2Vzc0NhbGxiYWNrKHJlcykge1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgdm0uY29udGFjdHMgPSByZXMuZGF0YTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnRhY3QuaW50cmFzaCBzaG91bGQgYmUgYm9vbGVhbiB2YWx1ZS5cclxuICAgICAgICAgICAgICAgICAgICAgICAgXy5lYWNoKHZtLmNvbnRhY3RzLCBmdW5jdGlvbiAoY29udGFjdCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGFjdC5pbnRyYXNoID0gISErY29udGFjdC5pbnRyYXNoO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbnRhY3RzU2VydmljZS5jb250YWN0cy5wdXNoKGNvbnRhY3QpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgfSwgZnVuY3Rpb24gZXJyb3JDYWxsYmFjayhyZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoJ1RoZXJlIHdhcyBhbiBlcnJvciByZXRyaWV2aW5nIGNvbnRhY3RzLicpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgLy8gRGlzcGxheSBhbGwgY3VycmVudCBjb250YWN0cyBpbiB0aGUgZGF0YWJhc2Ugd2hlbiBwYWdlIGlzIGxvYWRlZC5cclxuICAgICAgICAgICAgdm0uZGlzcGxheUNvbnRhY3RzKCk7XHJcblxyXG5cclxuICAgICAgICAgICAgLy8gQWRkIG5ldyBjb250YWN0cy5cclxuICAgICAgICAgICAgdm0uYWRkQ29udGFjdCA9IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgICAgICAgICAkaHR0cC5wb3N0KCdzYXZlLWNvbnRhY3QnLCB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGZpcnN0X25hbWU6IHZtLmZpcnN0TmFtZSxcclxuICAgICAgICAgICAgICAgICAgICBsYXN0X25hbWU6IHZtLmxhc3ROYW1lLFxyXG4gICAgICAgICAgICAgICAgICAgIGVtYWlsOiB2bS5lbWFpbCxcclxuICAgICAgICAgICAgICAgICAgICBwaG9uZTogdm0ucGhvbmVcclxuXHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKCBmdW5jdGlvbiBzdWNjZXNzQ2FsbGJhY2sgKHJlcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2bS5kaXNwbGF5Q29udGFjdHMoKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZtLmZpcnN0TmFtZSA9ICcnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2bS5sYXN0TmFtZSA9ICcnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2bS5lbWFpbCA9ICcnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2bS5waG9uZSA9ICcnO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICB9LCBmdW5jdGlvbiBlcnJvckNhbGxiYWNrIChyZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQubG9nKCdUaGVyZSB3YXMgYW4gZXJyb3Igc2F2aW5nIHRoZSBjb250YWN0LicsIHJlcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcblxyXG5cclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIHZtLnRvZ2dsZUNvbnRhY3RJblRyYXNoID0gZnVuY3Rpb24oY29udGFjdCl7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIGNvbnRhY3QuaW50cmFzaCA9ICEoY29udGFjdC5pbnRyYXNoKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkaHR0cC5wb3N0KCdzb2Z0LWRlbGV0ZScsIHtpZDogY29udGFjdC5pZH0pXHJcblxyXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIHN1Y2Nlc3NDYWxsYmFjayhyZXMpIHtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgfSwgZnVuY3Rpb24gZXJyb3JDYWxsYmFjayhyZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoJ1RoZXJlIHdhcyBhbiBlcnJvciBzdG9yaW5nIHRoZSBcXCdpbnRyYXNoXFwnIHN0YXRlIG9mICcgKyBjb250YWN0LmZpcnN0X25hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICB9KTtcclxuXHJcbn0oKSk7XHJcbiIsIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IE5laWwgU3RyYWluIG9uIDMvMTYvMjAxNi5cclxuICovXHJcblxyXG4oZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgICAvLyBUT0RPOiBwcm9iYWJseSBtb3ZlIHNvbWUgZnVuY3Rpb25zIGZyb20gQ29udGFjdHNDb250cm9sbGVyIHRvIGhlcmUuXHJcbiAgICBhbmd1bGFyLm1vZHVsZSgnY29udGFjdHNBcHAnKVxyXG4gICAgICAgIC5zZXJ2aWNlKCdDb250YWN0c1NlcnZpY2UnLCBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgICAgICB2YXIgdm0gPSB0aGlzO1xyXG5cclxuICAgICAgICAgICAgdm0uY29udGFjdHMgPSBbXTtcclxuXHJcbiAgICAgICAgfSk7XHJcblxyXG59KCkpO1xyXG4iLCJcclxuKGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoJ2NvbnRhY3RzQXBwJylcclxuICAgICAgICAuY29udHJvbGxlcignVHJhc2hNb2RhbENvbnRyb2xsZXInLCBmdW5jdGlvbiAoQ29udGFjdHNTZXJ2aWNlLCAkaHR0cCkge1xyXG5cclxuICAgICAgICAgICAgdmFyIHZtID0gdGhpcztcclxuXHJcbiAgICAgICAgICAgIHZtLnRvZ2dsZVNlbGVjdEFsbCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIF8uZWFjaChDb250YWN0c1NlcnZpY2UuY29udGFjdHMsIGZ1bmN0aW9uIChjb250YWN0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGFjdC5zZWxlY3RlZCA9ICEoY29udGFjdC5zZWxlY3RlZCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgfSk7XHJcbn0oKSk7XHJcbiIsIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IE5laWwgU3RyYWluIG9uIDMvMTQvMjAxNi5cclxuICovXHJcblxyXG4oZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICd1c2Ugc3RyaWN0JztcclxuXHJcblxyXG59KCkpO1xyXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
